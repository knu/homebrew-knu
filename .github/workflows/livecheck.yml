name: Livecheck and Auto-update

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:
    inputs:
      auto_pr:
        description: 'Create PRs for outdated packages'
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  livecheck:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Add tap
        run: brew tap ${{ github.repository }}

      - name: Check for updates and create PRs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "## Livecheck Results" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"

          # Function to create PR for formula
          update_formula() {
            local name="$1"
            local new_version="$2"

            echo "Updating $name to $new_version..."

            # Create branch
            git checkout -b "bump-$name-$new_version"

            # Run brew bump-formula-pr
            brew bump-formula-pr --no-browse --no-fork --write-only \
              --version="$new_version" \
              "${{ github.repository_owner }}/$(basename "${{ github.repository }}")/$name"

            # Commit and push
            if git diff --stat; then
              git add Formula/"$name".rb
              git commit -m "$name $new_version"
              git push origin "bump-$name-$new_version"

              # Create PR
              gh pr create \
                --title "$name $new_version" \
                --body "Automated version bump to $new_version" \
                --base main \
                --head "bump-$name-$new_version"
            fi

            git checkout main
          }

          # Function to create PR for cask
          update_cask() {
            local name="$1"
            local new_version="$2"

            echo "Updating $name to $new_version..."

            # Create branch
            git checkout -b "bump-$name-$new_version"

            # Run brew bump-cask-pr
            brew bump-cask-pr --no-browse --no-fork --write-only \
              --version="$new_version" \
              "${{ github.repository_owner }}/$(basename "${{ github.repository }}")/$name"

            # Commit and push
            if git diff --stat; then
              git add Casks/"$name".rb
              git commit -m "$name $new_version"
              git push origin "bump-$name-$new_version"

              # Create PR
              gh pr create \
                --title "$name $new_version" \
                --body "Automated version bump to $new_version" \
                --base main \
                --head "bump-$name-$new_version"
            fi

            git checkout main
          }

          # Check formulae
          echo "### Formulae" >> "$GITHUB_STEP_SUMMARY"
          for formula in Formula/*.rb; do
            if [ -f "$formula" ]; then
              name=$(basename "$formula" .rb)
              result=$(brew livecheck "${{ github.repository_owner }}/$(basename "${{ github.repository }}")/$name" --json 2>/dev/null || echo "{}")

              if [ -n "$result" ] && [ "$result" != "{}" ]; then
                current=$(echo "$result" | jq -r '.[0].version.current' 2>/dev/null || echo "")
                latest=$(echo "$result" | jq -r '.[0].version.latest' 2>/dev/null || echo "")

                echo "- **$name**: $current → $latest" >> "$GITHUB_STEP_SUMMARY"

                if [ -n "$latest" ] && [ "$current" != "$latest" ] && [ "${{ github.event.inputs.auto_pr || 'true' }}" == "true" ]; then
                  update_formula "$name" "$latest"
                fi
              fi
            fi
          done

          # Check casks
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "### Casks" >> "$GITHUB_STEP_SUMMARY"
          for cask in Casks/*.rb; do
            if [ -f "$cask" ]; then
              name=$(basename "$cask" .rb)
              result=$(brew livecheck --cask "${{ github.repository_owner }}/$(basename "${{ github.repository }}")/$name" --json 2>/dev/null || echo "{}")

              if [ -n "$result" ] && [ "$result" != "{}" ]; then
                current=$(echo "$result" | jq -r '.[0].version.current' 2>/dev/null || echo "")
                latest=$(echo "$result" | jq -r '.[0].version.latest' 2>/dev/null || echo "")

                echo "- **$name**: $current → $latest" >> "$GITHUB_STEP_SUMMARY"

                if [ -n "$latest" ] && [ "$current" != "$latest" ] && [ "${{ github.event.inputs.auto_pr || 'true' }}" == "true" ]; then
                  update_cask "$name" "$latest"
                fi
              fi
            fi
          done
